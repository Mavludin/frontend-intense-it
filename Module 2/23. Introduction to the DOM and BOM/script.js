// Глобальный объект window
// console.log(window)

// Document Object Model, сокращённо DOM – объектная модель документа, которая представляет все содержимое страницы в виде объектов, которые можно менять.

// Объект document – основная «входная точка». С его помощью мы можем что-то создавать или менять на странице.
// console.log(document)

// Браузер создаёт DOM при загрузке страницы, складывает его в переменную document и сообщает, что DOM создан, с помощью события DOMContentLoaded. 
// С переменной document начинается любая работа с HTML-разметкой в JavaScript.

// Дерево состоит из обычных и текстовых узлов. Обычные узлы - это HTML-теги, а текстовые узлы - текст внутри тегов.

// Обычный узел называется Element, и он содержит в себе описание тега, атрибутов тега и обработчиков. 
// У любого узла есть один родительский узел и дочерние. 
// Родительский узел - элемент в который вложен текущий узел, он может быть только один. 
// Дочерние - узлы, которые вложены в текущий узел.


// Браузерное окружение даёт возможность работать со страницами сайтов. 
// Предоставление этих дополнительных возможностей и функциональности в виде объектов, к которым у языка есть доступ - это объектная модель.

// Объект navigator содержит информацию о браузере: название, версия, платформа, доступные плагины, доступ к буферу обмена и прочее.
// console.log(navigator)

// Функция позволяющая получить данные по браузеру
// function getBrowserVersion() {
//     const userAgent = navigator.userAgent;
//     const browserName = userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
   
//     if (/trident/i.test(browserName[0])) {
//       const rv = /\brv[ :]+(\d+)/g.exec(userAgent) || [];
//       return `IE ${rv[1] || ''}`;
//     }
   
//     const version = browserName[2] ? browserName[2] : null;
//     const browser = browserName[1] ? browserName[1] : null;
   
//     if (browser === null || version === null) {
//       return 'Unknown Browser';
//     }
   
//     return `${browser} ${version}`;
//   }
   
//   console.log(getBrowserVersion());

// Объект screen содержит информацию об экране браузера.
// console.log(screen)

// Объект location даёт возможность узнать, на какой странице мы находимся и перейти на другую страницу программно. 
// console.log(location)

// fetch предоставляет возможность работы с сетью, с его помощью можно отправлять запросы на сервер.
// console.log(fetch)

// history даёт доступ к истории браузера, которая ограничена текущей вкладкой.
// console.log(history)
// history.back()
// history.forward()